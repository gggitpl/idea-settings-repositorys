<application>
  <component name="AppStorage">
    <histories>
      <item value="* The two possible authentication types for a resource." />
      <item value="delim" />
      <item value="* Convert a {@code String} array into a comma delimited {@code String}" />
      <item value="// Effectively final, just re-calculated on deserialization" />
      <item value="instance" />
      <item value="* Time unit representing sixty seconds" />
      <item value="* Time unit representing one second" />
      <item value="* @param timeout the key expiration timeout." />
      <item value="// Use names and ensure unique to protect against duplicates" />
      <item value="duplicates" />
      <item value="* Set the {@code value} and expiration {@code timeout} for {@code key}." />
      <item value="* Overwrite parts of {@code key} starting at the specified {@code offset} with given {@code value}." />
      <item value="* Increment an integer value stored as string value under {@code key} by {@code delta}." />
      <item value="erase Credentials" />
      <item value="available" />
      <item value="Enable Transaction Management" />
      <item value="java.lang.IllegalArgumentException: RelationalPath based projection can only be used with generated Bean types" />
      <item value="RelationalPath based projection can only be used with generated Bean types" />
      <item value="Expression" />
      <item value="projection" />
      <item value="Projection Role" />
      <item value="ellipsiod" />
      <item value="* Ecapsulates Vincety's geodesy algorithm ." />
      <item value="NEUTRAL" />
      <item value="* @param radius must be greater or equal to zero." />
      <item value="* @return never {@literal null} unless used in pipeline / transaction." />
      <item value="Initializing" />
      <item value="* Thrown by {@link HttpMessageConverter} implementations when the" />
      <item value="* Customize the response for HttpMediaTypeNotAcceptableException." />
      <item value="* @param message the detail message. The detail message is saved for" />
      <item value="* Constant that indicates request scope." />
      <item value="* Customize the response for HttpMediaTypeNotSupportedException." />
      <item value="* Start an exists builder" />
      <item value="* @param time time to wait" />
      <item value="* Returns true if the mutex is acquired by a thread in this JVM" />
      <item value="* @param qty number of leases to acquire" />
      <item value="return false; // important - don't overwrite lease field if couldn't be acquired" />
      <item value="MICROSECONDS" />
      <item value="MILLISECONDS" />
      <item value="* Time unit representing one thousandth of a second" />
      <item value="* @throws Exception ZK errors, connection interruptions" />
      <item value="* @return true if the mutex was acquired, false if not" />
      <item value="* @param unit time unit" />
      <item value="* @throws Throwable if the invoked proceed throws anything" />
      <item value="* @return the result of proceeding" />
      <item value="* @param connectionTimeoutMs connection timeout" />
      <item value="* @param sessionTimeoutMs session timeout" />
      <item value="max number of times to retry" />
      <item value="initial amount of time to wait between retries" />
      <item value="* @param maxSleepMs max time in ms to sleep on each retry" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="109" />
        <entry key="ENGLISH" value="110" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="RUSSIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>