<application>
  <component name="AppStorage">
    <histories>
      <item value="Expression" />
      <item value="projection" />
      <item value="Projection Role" />
      <item value="ellipsiod" />
      <item value="* Ecapsulates Vincety's geodesy algorithm ." />
      <item value="NEUTRAL" />
      <item value="* @param radius must be greater or equal to zero." />
      <item value="* @return never {@literal null} unless used in pipeline / transaction." />
      <item value="Initializing" />
      <item value="* Thrown by {@link HttpMessageConverter} implementations when the" />
      <item value="* Customize the response for HttpMediaTypeNotAcceptableException." />
      <item value="* @param message the detail message. The detail message is saved for" />
      <item value="* Constant that indicates request scope." />
      <item value="* Customize the response for HttpMediaTypeNotSupportedException." />
      <item value="* Start an exists builder" />
      <item value="* @param time time to wait" />
      <item value="* Returns true if the mutex is acquired by a thread in this JVM" />
      <item value="* @param qty number of leases to acquire" />
      <item value="return false; // important - don't overwrite lease field if couldn't be acquired" />
      <item value="MICROSECONDS" />
      <item value="MILLISECONDS" />
      <item value="* Time unit representing one second" />
      <item value="* Time unit representing one thousandth of a second" />
      <item value="* @throws Exception ZK errors, connection interruptions" />
      <item value="* @return true if the mutex was acquired, false if not" />
      <item value="* @param unit time unit" />
      <item value="* @throws Throwable if the invoked proceed throws anything" />
      <item value="* @return the result of proceeding" />
      <item value="* @param connectionTimeoutMs connection timeout" />
      <item value="* @param sessionTimeoutMs session timeout" />
      <item value="max number of times to retry" />
      <item value="initial amount of time to wait between retries" />
      <item value="* @param maxSleepMs max time in ms to sleep on each retry" />
      <item value="* @param maxRetries max number of times to retry" />
      <item value="* @param baseSleepTimeMs initial amount of time to wait between retries" />
      <item value="//covers expired, locked, disabled cases (mentioned in section 5.2, draft 31)" />
      <item value="// If the username/password are wrong the spec says we should send 400/invalid grant" />
      <item value="&quot;Dummy filter chain&quot;" />
      <item value="// once-per-request handling, so don't re-do security checking" />
      <item value="// filter already applied to this request and user wants us to observe" />
      <item value="* @param chain the filter chain" />
      <item value="* Method that is actually called by the filter chain. Simply delegates to the" />
      <item value="* Checks the current authentication token and passes it to the AuthenticationManager" />
      <item value="* Processes a HTTP request's BASIC authorization headers, putting the result into the" />
      <item value="&quot;There is no client authentication. Try adding an appropriate authentication filter.&quot;);" />
      <item value="// A refresh token has its own default scopes, so we should ignore any added by the factory here." />
      <item value="Sets a new list of custom authentication filters for the TokenEndpoint. Filters will be set upstream of the * default BasicAuthenticationFilter." />
      <item value="Adds a new custom authentication filter for the TokenEndpoint. Filters will be set upstream of the default * BasicAuthenticationFilter." />
      <item value="super.setAuthenticated(true); // must use super, as we override" />
      <item value="* Constructor which sets the &lt;tt&gt;defaultTargetUrl&lt;/tt&gt; property of the base class." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="96" />
        <entry key="ENGLISH" value="97" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>